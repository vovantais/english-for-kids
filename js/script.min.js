const burger = document.querySelector(".header__toggle"), menu = document.querySelector(".header__menu"); function toggleMenu() { burger.addEventListener("click", t => { t.stopPropagation(), menu.classList.toggle("active"), burger.classList.toggle("active"), document.body.classList.toggle("lock") }), document.addEventListener("click", t => { const e = t.target, a = e == menu || menu.contains(e), i = e == burger, n = menu.classList.contains("active"); a || i || !n || (menu.classList.toggle("active"), burger.classList.toggle("active"), document.body.classList.toggle("lock")) }) } toggleMenu(); const rotate = document.querySelectorAll(".card__rotate"), flip = document.querySelectorAll(".flip"), cardMainPage = document.querySelectorAll(".content__card"), switchPlayTrain = document.querySelector(".switch__mode"), textHidden = document.querySelectorAll(".uppercase"), englishWords = document.querySelectorAll(".en"), hiddenBtn = document.querySelector(".footer__row"), startGame = document.querySelector(".item__btn"), flip_body = document.querySelectorAll(".flip__body"), icon = document.querySelector(".fa-undo"), victory = document.querySelector(".victory"), fail = document.querySelector(".fail"), cardsImg = document.querySelectorAll(".card__img"), starWin = document.querySelector(".content__star-win"), starFail = document.querySelector(".content__star-fail"), fail_mistake = document.querySelector(".fail__mistake"); let switchState = !0, arrTextContent = [], time = null, text = "", random = "", countWin = 0, countFail = 0; function addAndRemoveClassActive(t) { t.addEventListener("click", t => { let e = t.currentTarget, a = t.target, i = e.textContent; i = i.replace(/[^A-Z]/gi, "").trim(), a.classList.contains("fa-sync") && (switchState = !1, a.classList.add("active"), e.classList.add("active")), switchPlayTrain.classList.contains("active") && (switchState = !1), e.addEventListener("mouseleave", () => { switchState = !0, a.classList.remove("active"), e.classList.remove("active") }), e.addEventListener("touchend", () => { a.classList.contains("active") && (a.classList.remove("active"), e.classList.remove("active")), switchState = !0 }), switchState && (clickSound = new Audio(`../audio/${i}.mp3`), clickSound.play()) }) } function addLinlToMainPage(t) { t.addEventListener("click", t => { let e = t.currentTarget.getAttribute("data-link"); null !== e && (document.location.href = `./pages/${e}.html`) }) } function switchModeTrainAndPlay() { switchPlayTrain.addEventListener("click", () => { switchPlayTrain.classList.toggle("active"); for (let t = 0; t < textHidden.length; t++)switchPlayTrain.classList.contains("active") ? (textHidden[t].classList.add("hidden"), hiddenBtn.classList.remove("hidden")) : (textHidden[t].classList.remove("hidden"), hiddenBtn.classList.add("hidden")); for (let t = 0; t < rotate.length; t++)switchPlayTrain.classList.contains("active") ? rotate[t].classList.add("hidden") : rotate[t].classList.remove("hidden"); for (let t = 0; t < rotate.length; t++)switchPlayTrain.classList.contains("active") ? rotate[t].classList.add("hidden") : rotate[t].classList.remove("hidden"); for (let t = 0; t < cardsImg.length; t++)switchPlayTrain.classList.contains("active") ? cardsImg[t].classList.add("active") : cardsImg[t].classList.remove("active"); GameLogic() }) } function GameLogic() { if (0 === arrTextContent.length) for (let t = 0; t < englishWords.length; t++)arrTextContent.push(englishWords[t].textContent); if (random = arrTextContent[Math.floor(Math.random() * arrTextContent.length)], switchPlayTrain.classList.contains("active") && startGame.addEventListener("click", () => { startGame.classList.add("active"), icon.classList.add("active"), switchState && (clickSound = new Audio(`../audio/${random}.mp3`), clickSound.play()); for (let t = 0; t < flip_body.length; t++)flip_body[t].addEventListener("click", t => { if (text = t.currentTarget.textContent.replace(/[^A-Z]/gi, "").trim(), text === random) { for (let t = 0; t < arrTextContent.length; t++)arrTextContent[t] === random && arrTextContent.splice(t, 1); if (switchState) { random = arrTextContent[Math.floor(Math.random() * arrTextContent.length)], t.currentTarget.classList.add("success"), clickSound = new Audio("../audio/correct.mp3"), clickSound.play(), countWin++; const e = document.createElement("img"); e.src = "../img/star-win.svg", starWin.append(e), void 0 !== random && (time = setTimeout(() => { clickSound = new Audio(`../audio/${random}.mp3`), clickSound.play() }, 1500)) } } else if ("" !== random && switchState && !t.currentTarget.classList.contains("success")) { clickSound = new Audio("../audio/error.mp3"), clickSound.play(), countWin--; const t = document.createElement("img"); t.src = "../img/star.svg", starFail.append(t), countFail++ } 0 === arrTextContent.length && 8 === countWin && switchState && (clickSound = new Audio("../audio/success.mp3"), clickSound.play(), setTimeout(() => { victory.classList.remove("overlay") }, 800), victory.addEventListener("click", () => { document.location.href = "/" })), (0 === arrTextContent.length && 8 !== countWin || 8 === countFail) && switchState && (clickSound = new Audio("../audio/failure.mp3"), clickSound.play(), setTimeout(() => { fail.classList.remove("overlay"), fail_mistake.textContent = `You lose ${countFail} wrong answers!` }, 800), fail.addEventListener("click", () => { document.location.href = "../index.html" })) }) }), !switchPlayTrain.classList.contains("active")) { random = "", text = "", clearTimeout(time), arrTextContent = [], switchState = !1, setTimeout(() => { document.location.href = "" }, 500), startGame.classList.remove("active"), icon.classList.remove("active"); for (let t = 0; t < flip_body.length; t++)flip_body[t].classList.contains("success") && flip_body[t].classList.remove("success") } } !function () { for (let t = 0; t < flip.length; t++)addAndRemoveClassActive(flip[t]) }(), function () { for (let t = 0; t < cardMainPage.length; t++)addLinlToMainPage(cardMainPage[t]) }(), switchModeTrainAndPlay();